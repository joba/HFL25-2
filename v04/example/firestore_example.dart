// Example usage of FirestoreHeroDataManager, generated by AI

import 'package:v04/firebase_config.dart';
import 'package:v04/managers/firestore_hero_data_manager.dart';
import 'package:v04/models/hero_model.dart';

void main() async {
  // Initialize Firebase
  FirebaseConfig.initialize();

  // Use Firestore instead of file storage
  final heroManager = FirestoreHeroDataManager();

  // Create a test hero
  // final hero = heroManager.createHero(
  //   name: 'Spider-Man',
  //   powerStats: PowerStats(90, 55, 67, 75, 74, 85),
  //   biography: Biography(
  //     'Peter Parker',
  //     'No alter egos found.',
  //     ['Spidey', 'Web-Slinger'],
  //     'New York City',
  //     'Amazing Fantasy #15',
  //     'Marvel Comics',
  //     'good',
  //   ),
  //   appearance: Appearance(
  //     'Male',
  //     'Human',
  //     ['5\'10"', '178 cm'],
  //     ['167 lb', '76 kg'],
  //     'Brown',
  //     'Brown',
  //   ),
  // );

  // print('Attempting to save hero to Firestore...');

  try {
    // Save to Firestore
    // await heroManager.saveHero(hero);
    // print('Hero saved to Firestore successfully!');

    // Load heroes from Firestore
    await heroManager.loadHeroes();
    print('Loaded ${heroManager.heroes.length} heroes from Firestore');

    // Search heroes
    final searchResults = await heroManager.searchHeroes('man');
    print('Found ${searchResults.length} heroes matching "man"');

    for (final hero in searchResults) {
      print('- ${hero.name} (${hero.appearance?.race})');
    }
  } catch (e) {
    print('Error: $e');
    print('Make sure your Firebase configuration is correct in the .env file');
  }
}
